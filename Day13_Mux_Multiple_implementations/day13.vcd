$date
	Tue Jan 10 21:28:41 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux_tb $end
$var wire 1 ! y_ter_o $end
$var wire 1 " y_loop_o $end
$var wire 1 # y_ifelse_o $end
$var wire 1 $ y_case_o $end
$var wire 1 % y_aor_o $end
$var reg 4 & a_i [3:0] $end
$var reg 4 ' sel_i [3:0] $end
$scope module DAY13 $end
$var wire 4 ( a_i [3:0] $end
$var wire 4 ) sel_i [3:0] $end
$var wire 1 % y_aor_o $end
$var wire 1 ! y_ter_o $end
$var reg 1 $ y_case_o $end
$var reg 1 # y_ifelse_o $end
$var reg 1 " y_loop_o $end
$scope begin $ivl_for_loop0 $end
$var integer 32 * i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 + i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b100 *
b10 )
b1001 (
b10 '
b1001 &
0%
0$
0#
0"
0!
$end
#5
b100 *
b1 '
b1 )
b0 &
b0 (
b1 +
#10
1!
1%
1"
b100 *
1#
1$
b1000 '
b1000 )
b1000 &
b1000 (
b10 +
#15
1%
b100 *
1"
b1 '
b1 )
b11 &
b11 (
b11 +
#20
0%
0!
b100 *
0"
0#
0$
b100 '
b100 )
b1000 &
b1000 (
b100 +
#25
b100 *
b1011 &
b1011 (
b101 +
#30
1!
1%
1"
b100 *
1#
1$
b1000 '
b1000 )
b1111 &
b1111 (
b110 +
#35
1%
b100 *
1"
b10 '
b10 )
b111 +
#40
b100 *
1"
b110 &
b110 (
b1000 +
#45
b100 *
1"
b1 '
b1 )
b1111 &
b1111 (
b1001 +
#50
0%
0!
b100 *
0"
0#
0$
b1000 '
b1000 )
b0 &
b0 (
b1010 +
#55
1%
1!
1"
b100 *
1$
1#
b10 '
b10 )
b1111 &
b1111 (
b1011 +
#60
b100 *
1"
b111 &
b111 (
b1100 +
#65
b100 *
1"
b1010 &
b1010 (
b1101 +
#70
b100 *
1"
b1 '
b1 )
b1 &
b1 (
b1110 +
#75
0%
0!
b100 *
0"
0$
0#
b100 '
b100 )
b11 &
b11 (
b1111 +
#80
1!
1%
1"
b100 *
1#
1$
b100 &
b100 (
b10000 +
#85
0%
0!
b100 *
0"
0$
0#
b10 '
b10 )
b1101 &
b1101 (
b10001 +
#90
b100 *
b1 '
b1 )
b100 &
b100 (
b10010 +
#95
b100 *
b0 &
b0 (
b10011 +
#100
1%
1!
1"
b100 *
1#
1$
b10 '
b10 )
b1011 &
b1011 (
b10100 +
#105
0%
0!
b100 *
0"
0$
0#
b0 &
b0 (
b10101 +
#110
b100 *
b1000 &
b1000 (
b10110 +
#115
b100 *
b100 '
b100 )
b1001 &
b1001 (
b10111 +
#120
b100 *
b1 '
b1 )
b110 &
b110 (
b11000 +
#125
1!
1%
1"
b100 *
1$
1#
b1000 '
b1000 )
b1111 &
b1111 (
b11001 +
#130
1%
b100 *
1"
b10 '
b10 )
b1010 &
b1010 (
b11010 +
#135
b100 *
1"
b1011 &
b1011 (
b11011 +
#140
b100 *
1"
b1000 '
b1000 )
b1111 &
b1111 (
b11100 +
#145
b100 *
1"
b1110 &
b1110 (
b11101 +
#150
1%
b100 *
1"
b100 '
b100 )
b101 &
b101 (
b11110 +
#155
0%
0!
b100 *
0"
0$
0#
b1 '
b1 )
b0 &
b0 (
b11111 +
#160
b100000 +
